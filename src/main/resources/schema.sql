CREATE TABLE IF NOT EXISTS mpa (
                      mpa_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                      name varchar(100) NOT NULL
              );
CREATE TABLE IF NOT EXISTS film (
                      film_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                      name varchar(100) NOT NULL,
                      mpa_id INTEGER REFERENCES mpa (mpa_id),
                      description varchar(200),
                      release_date date,
                      duration BIGINT,
                      CONSTRAINT constr_film CHECK (duration > 0 AND release_date >=  '1895-12-28')
              );
CREATE TABLE IF NOT EXISTS genre (
                      genre_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                      name varchar(100) NOT NULL
              );
CREATE TABLE IF NOT EXISTS film_user (
                      user_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                      name varchar(100),
                      email varchar(100) NOT NULL,
                      login varchar(100) NOT NULL,
                      birth_date date
              );
CREATE TABLE IF NOT EXISTS film_genres (
                  film_genres_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                  film_id INTEGER REFERENCES film (film_id),
                  genre_id INTEGER REFERENCES genre (genre_id),
                  UNIQUE (film_id, genre_id)
              );
CREATE TABLE IF NOT EXISTS favorite_films (
                  favorite_films_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                  film_id INTEGER REFERENCES film (film_id),
                  user_id INTEGER REFERENCES film_user (user_id),
                  UNIQUE (film_id, user_id)
              );
CREATE TABLE IF NOT EXISTS friendships (
                  friendships_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                  user_left_id INTEGER REFERENCES film_user (user_id),
                  user_right_id INTEGER REFERENCES film_user (user_id),
                  UNIQUE (user_left_id, user_right_id)
              );
